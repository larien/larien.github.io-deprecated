{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../logo.svg","../../src/components/Logo.svelte","../../src/components/Typewriter.svelte","../../src/layout/body/Body.svelte","../../node_modules/svelte-flex/src/Flex.svelte","../../src/components/Copyright.svelte","../../src/components/ContactIcon.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<svg id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 962 962\"><defs><style>.cls-1{fill:none;}.cls-2{fill:#1da1eb;}</style></defs><title>logoLogo</title><path class=\"cls-1\" d=\"M563,1019v0Z\" transform=\"translate(-563 -57)\"/><polygon class=\"cls-1\" points=\"962 962 962 785.02 173.47 785.02 173.47 0 0 0 0 962 962 962\"/><rect class=\"cls-2\" width=\"173.48\" height=\"962\"/><rect class=\"cls-2\" y=\"785.02\" width=\"962\" height=\"176.98\"/><rect class=\"cls-2\" x=\"262.84\" width=\"699.16\" height=\"173.48\"/><rect class=\"cls-2\" x=\"788.52\" width=\"173.48\" height=\"700.91\"/><rect class=\"cls-2\" x=\"262.84\" y=\"261.09\" width=\"697.16\" height=\"175.23\"/><rect class=\"cls-2\" x=\"262.84\" y=\"523.93\" width=\"697.16\" height=\"176.98\"/></svg>","<script>\n    import Logo from '../../public/logo.svg'\n\n    export let height\n</script>\n\n<div class=\"logo\">\n    <Logo height={height} />\n</div>\n\n<style>\n    .logo {\n        margin: 20px;\n        position: absolute;\n    }\n</style>","<script>\n\timport { onMount, createEventDispatcher, onDestroy } from 'svelte'\n\texport let interval = 30\n\texport let cascade = false\n\texport let loop = false\n\texport let cursor = true\n\tlet node = \"\"\n\tlet elements = []\n\tconst dispatch = createEventDispatcher()\n\tif (cascade && loop) throw new Error('`cascade` mode should not be used with `loop`!')\n\tconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\tconst rng = (min, max) => Math.floor(Math.random() * (max - min) + min)\n\tconst hasSingleTextNode = el => el.childNodes.length === 1 && el.childNodes[0].nodeType === 3\n\tconst typingInterval = async () =>\n\t\tArray.isArray(interval) ? await sleep(interval[rng(0, interval.length)]) : await sleep(interval)\n\tconst getElements = parentElement => {\n\t\tconst treeWalker = document.createTreeWalker(parentElement, NodeFilter.SHOW_ELEMENT)\n\t\tlet currentNode = treeWalker.nextNode()\n\t\twhile (currentNode) {\n\t\t\tconst text = currentNode.textContent.split('')\n\t\t\thasSingleTextNode(currentNode) && elements.push(!loop ? { currentNode, text } : text)\n\t\t\tcurrentNode = treeWalker.nextNode()\n\t\t}\n\t}\n\tconst typewriterEffect = async ({ currentNode, text }, { loopAnimation } = { loopAnimation: false }) => {\n\t\tcurrentNode.textContent = ''\n\t\tcurrentNode.classList.add('typing')\n\t\tfor (const letter of text) {\n\t\t\tcurrentNode.textContent += letter\n\t\t\tconst fullyWritten = loopAnimation && currentNode.textContent === text.join('')\n\t\t\tif (fullyWritten) {\n\t\t\t\ttypeof loop === 'number' ? await sleep(loop) : await sleep(1500)\n\t\t\t\twhile (currentNode.textContent !== '') {\n\t\t\t\t\tcurrentNode.textContent = currentNode.textContent.slice(0, -1)\n\t\t\t\t\tawait typingInterval()\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n\t\t\tawait typingInterval()\n\t\t}\n\t\tif (currentNode.nextSibling !== null || !cascade)\n\t\t\tcurrentNode.classList.length == 1\n\t\t\t\t? currentNode.removeAttribute('class')\n\t\t\t\t: currentNode.classList.remove('typing')\n\t}\n\tconst cascadeMode = async () => {\n\t\telements.forEach(({ currentNode }) => (currentNode.textContent = ''))\n\t\tfor (const element of elements) await typewriterEffect(element)\n\t\tdispatch('done')\n\t}\n\tconst loopMode = async () => {\n\t\tconst loopParagraphTag = node.firstChild.tagName.toLowerCase()\n\t\tconst loopParagraph = document.createElement(loopParagraphTag)\n\t\tnode.childNodes.forEach(el => el.remove())\n\t\tnode.appendChild(loopParagraph)\n\t\twhile (loop) {\n\t\t\tfor (const text of elements) {\n\t\t\t\tconsole.log(text)\n\t\t\t\tloopParagraph.textContent = text.join('')\n\t\t\t\tawait typewriterEffect({ currentNode: loopParagraph, text }, { loopAnimation: true })\n\t\t\t}\n\t\t\tdispatch('done')\n\t\t}\n\t}\n\tconst defaultMode = async () => {\n\t\tawait new Promise(resolve => {\n\t\t\telements.forEach(async (element, i) => {\n\t\t\t\tawait typewriterEffect(element)\n\t\t\t\ti + 1 === elements.length && resolve()\n\t\t\t})\n\t\t})\n\t\tdispatch('done')\n\t}\n\tonMount(async () => {\n\t\tif (hasSingleTextNode(node)) throw new Error('<Typewriter /> must have at least one element')\n\t\tgetElements(node)\n\t\tcascade ? cascadeMode() : loop ? loopMode() : defaultMode()\n\t})\n\tonDestroy(() => loop = false)\n</script>\n\n<style>\n\t@keyframes cursorFade {\n\t\t0% {\n\t\t\topacity: 1;\n\t\t}\n\t\t50% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t.cursor :global(.typing::after) {\n\t\tcontent: '▌';\n\t\tdisplay: inline-block;\n\t\tcolor: var(--cursor-color);\n\t\tanimation: cursorFade 1.25s infinite;\n\t}\n</style>\n\n<div class:cursor style=\"--cursor-color: {typeof cursor === 'string' ? cursor : 'black'}\" bind:this={node}>\n\t<slot />\n</div>","<script>\n    import Typewriter from '../../components/Typewriter.svelte'\n\n    let birth = new Date('1997/07/05')\n    let current = new Date()\n    let diff = current - birth\n    let age = Math.floor(diff/31557600000); // divide by 1000*60*60*24*365.25\n    \n    let language = \"en\"\n    let toggleLanguage = false\n    let selectable = true\n\n    let changeLanguages = {\n        \"pt\": \"Mudar o idioma\",\n        \"en\": \"Change language\",\n        \"es\": \"Cambiar el idioma\"\n    }\n\n    let changeLanguage = changeLanguages[language]\n\n    function selectEn() {\n        language = \"en\"\n        changeLanguage = changeLanguages[language]\n    }\n    \n    // function selectPt() {\n    //     language = \"pt\"\n    //     changeLanguage = changeLanguages[language]\n    // }\n    \n    // function selectEs() {\n    //     language = \"es\"\n    //     changeLanguage = changeLanguages[language]\n    // }\n    \n    function toggleLang() {\n        toggleLanguage = !toggleLanguage\n        selectable = true\n    }\n\n</script>\n\n<section id=\"body\">\n    <h4 class=\"languages {language}\">    \n        <i on:click={toggleLang} title={changeLanguage} class=\"fa fa-language\"></i>\n        {#if toggleLanguage}\n            <!-- {#if language == \"pt\"}\n                <p on:click={selectPt} class=\"selected\">PT</p>\n            {:else}\n                <p on:click={selectPt}>PT</p>\n            {/if} -->\n            {#if language == \"en\"}\n                <p on:click={selectEn} class=\"selected\">EN</p>\n            {:else}\n                <p on:click={selectEn}>EN</p>\n            {/if}\n            <!-- {#if language == \"es\"}\n                <p on:click={selectEs} class=\"selected\">ES</p>\n            {:else}\n                <p on:click={selectEs}>ES</p>\n            {/if} -->\n        {/if}\n    </h4>\n    <h1>\n        <!-- {#if language == \"pt\"}\n            <p>Olá!</p>\n            <p>Meu nome é <strong class=\"highlight\">Lauren</strong>.</p>\n            <p>Tenho <strong class=\"highlight\">{age} anos</strong> e sou uma</p>\n            <p>de <strong class=\"highlight\">São Paulo</strong>, <strong class=\"highlight\">Brasil</strong>.</p>\n        {/if} -->\n        {#if language == \"en\"}\n            <p>Howdy!</p>\n            <p>My name is <strong class=\"highlight\">Lauren</strong></p>\n            <p>and I'm a <strong class=\"highlight\">{age} year old</strong></p>\n            <Typewriter loop interval={70} cursor=#1da1f2>\n                <p>software developer</p>\n                <p>Computer Engineering student</p>\n                <p>Gopher</p>\n                <p>Korra fangirl</p>\n                <p>amazon in training</p>\n            </Typewriter>\n            <p>based in <strong class=\"highlight\">São Paulo</strong>, <strong class=\"highlight\">Brazil</strong>.</p>\n        {/if}\n       <!--  {#if language == \"es\"}\n            <p>¡Hola!</p>\n            <p>Soy <strong class=\"highlight\">Lauren</strong>.</p>\n            <p>Tengo <strong class=\"highlight\">{age} años</strong> y soy</p> -->\n            <!-- <Typewriter loop interval={70} cursor=#1da1f2>\n                <p>software developer</p>\n                <p>estudiante de Ingeniería Informática</p>\n                <p>Gopher</p>\n                <p>Korra fangirl</p>\n                <p>amazon en entrenamiento</p>\n            </Typewriter> -->\n            <!-- <p>de <strong class=\"highlight\">São Paulo</strong>, <strong class=\"highlight\">Brasil</strong>.</p>\n        {/if} -->\n    </h1>\n</section>\n\n<style>\n    #body {\n        display: flex;\n        flex: 1;\n    }\n\n    h1 {\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: auto;\n        margin-top: auto;\n        font-size: 200%;\n        font-weight: normal;\n    }\n\n    .highlight {\n        color: var(--blue);\n    }\n\n    i {\n        font-size: 30px;\n        color: var(--blue);\n    }\n\n    .languages {\n        position: absolute;\n        right: 0px;\n        font-size: 20px;\n        margin-right: 20px;\n\t\tpadding-right: 20px;\n        color: var(--secondary-text-color);\n        cursor: default;\n    }\n\n    .selected {\n        color: var(--blue);\n    }\n</style>","<script>\n\n  export let direction = 'row';\n  export let align = 'center';\n  export let justify = 'center';\n  export let reverse = false;\n\n  $: className = [\n    'flex',\n    `flex-direction--${direction}${reverse ? '--reverse' : ''}`,\n    `flex-align--${align}`,\n    `flex-justify--${justify}`,\n    //  Apply any additional/custom classNames, if provided\n    $$restProps.class ? $$restProps.class : '',\n  ].join(' ');\n\n</script>\n\n<style>\n  .flex {\n    display: flex;\n  }\n  /* Direction: 'row' | 'column' */\n  .flex-direction--row {\n    flex-direction: row;\n  }\n  .flex-direction--column {\n    flex-direction: column;\n  }\n  /* Reverse the order */\n  .flex-direction--row--reverse {\n    flex-direction: row-reverse;\n  }\n  .flex-direction--column--reverse {\n    flex-direction: column-reverse;\n  }\n  /* Align: 'start' | 'center' | 'end' | 'stretch' */\n  .flex-align--start {\n    align-items: flex-start;\n  }\n  .flex-align--center {\n    align-items: center;\n  }\n  .flex-align--end {\n    align-items: flex-end;\n  }\n  .flex-align--stretch {\n    align-items: stretch;\n  }\n  /* Justfy: 'start' | 'center' | 'end' | 'around' | 'between' | 'evenly' */\n  .flex-justify--start {\n    justify-content: flex-start;\n  }\n  .flex-justify--center {\n    justify-content: center;\n  }\n  .flex-justify--end {\n    justify-content: flex-end;\n  }\n  .flex-justify--around {\n    justify-content: space-around;\n  }\n  .flex-justify--between {\n    justify-content: space-between;\n  }\n  .flex-justify--evenly {\n    justify-content: space-evenly;\n  }\n</style>\n\n<div {...$$restProps} class={className}>\n\t<slot></slot>\n</div>\n","<script>\n    let currentDate = new Date();\n\n    let year = currentDate.getFullYear()\n</script>\n\n<p>&copy; {year} Lauren Ferreira</p>\n\n<style>\n    p {\n        color: var(--secondary-text-color);\n        position: absolute;\n        left: 15px;\n        bottom: 0px;\n    }\n</style>","<script>\n    export let icon;\n</script>\n\n<div class=\"contact {icon}\">\n    {#if icon == \"email\"}\n        <a\n            title=\"E-mail\"\n            href=\"mailto:lauren.ferremch@gmail.com\"\n            >\n            <i class=\"fa fa-envelope\"></i>\n        </a>\n    {:else if icon == \"linkedin\"}\n        <a\n            title=\"LinkedIn\"\n            href=\"https://www.linkedin.com/in/lauren-ferreira-9836914b/\"\n            >\n            <i class=\"fa fa-linkedin\"></i>\n        </a>\n    {:else if icon == \"twitter\"}\n        <a\n            title=\"Twitter\"\n            href=\"http://www.twitter.com/larienmf\"\n            >\n            <i class=\"fa fa-twitter\"></i>\n        </a>\n    {:else if icon == \"github\"}\n        <a\n            title=\"GitHub\"\n            href=\"https://github.com/larien\"\n            >\n            <i class=\"fa fa-github\"></i>\n        </a>\n    {/if}\n</div>\n\n<style>\n    a { color: inherit; } \n    .contact {\n        border-style: 0 solid;\n        border-radius: 8px;\n        color: var(--secondary-text-color);\n        font-size:30px;\n        padding: 15px 20px;\n        margin: 15px;  \n    }\n    .contact:hover {\n        color: white;\n    }\n    .email:hover {\n        background-color: red;\n    }\n    .linkedin:hover {\n        background-color: #2867B2;\n    }\n    .github:hover{\n        background-color: black;\n    }\n    .twitter:hover{\n        background-color: #1da1f2;\n    }\n</style>","<script>\n\timport Header from './layout/header/Header.svelte'\n\timport Body from './layout/body/Body.svelte'\n\timport Footer from './layout/footer/Footer.svelte'\n\n\tlet titleToggl = true\n\tlet title\n\n\ttoggle() // start with dark mode\n\n\tfunction toggle() {\n\t\ttitleToggl = !titleToggl\n\t\ttitle = titleToggl ? \"Dark mode\" : \"Light mode\"\n\t\twindow.document.body.classList.toggle('dark-mode')\n\t}\n</script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"https://fonts.googleapis.com/css?family=Coda\" rel=\"stylesheet\">\n\n<i title={title} on:click={toggle} class=\"fa fa-moon-o\"></i>\n\n<Header/>\n<Body/>\n<Footer/>\n\n<style>\n\t:global(body) {\n\t\tdisplay: flex;\n\t\tmin-height: 100vh;\n\t\tflex-direction: column;\n\t\tbackground-color: var(--bg-color);\n\t\tcolor: var(--text-color);\n\t\ttransition: background-color 0.3s;\n\t\ttext-align: center;\n\t\tfont-family: 'Coda', monospace;\n\t}\n\t:global(body.dark-mode) {\n\t\tbackground-color: var(--bg-dark-color);\n\t\tcolor: var(--text-dark-color);\n\t}\n\n\t:root{\n\t\t--bg-color: #FFFFFF;\n\t\t--text-color: #1B2836;\n\t\t--secondary-text-color: #808F9A;\n\t\t--bg-dark-color: #1B2836;\n\t\t--text-dark-color: #FFFFFF;\n\t\t--blue: #1da1eb;\n\t}\n\n\ti {\n\t\tcolor: var(--blue);\n\t\tmargin: 20px;\n\t\tpadding: 20px;\n\t\tfont-size: 30px;\n\t\tposition: absolute;\n\t\tright: 0px;\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_svg_attributes","children","Array","from","childNodes","claim_element","nodes","svg","nodeName","j","remove","push","splice","claim_text","nodeType","set_style","important","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","callback","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","ready","ret","hydrate","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","height","interval","cascade","loop","cursor","elements","dispatch","sleep","ms","setTimeout","hasSingleTextNode","el","typingInterval","isArray","min","floor","random","typewriterEffect","currentNode","loopAnimation","textContent","letter","join","nextSibling","parentElement","treeWalker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","split","getElements","cascadeMode","loopParagraphTag","firstChild","tagName","toLowerCase","loopParagraph","console","log","loopMode","defaultMode","onDestroy","r","birth","Date","diff","age","language","toggleLanguage","changeLanguages","pt","en","es","changeLanguage","direction","align","justify","reverse","className","$$restProps","class","getFullYear","icon","title","titleToggl","window","body"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAyBhF,SAASE,EAAYC,EAAYC,EAAKC,EAASf,GAC3C,GAAIa,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAASf,GAC5D,OAAOa,EAAW,GAAGG,IAG7B,SAASC,EAAiBJ,EAAYC,EAAKC,EAASf,GAChD,OAAOa,EAAW,IAAMb,EAClBL,EAAOoB,EAAQD,IAAII,QAASL,EAAW,GAAGb,EAAGc,KAC7CC,EAAQD,IAoBlB,SAASK,EAAYC,EAAMC,EAAiBP,EAAKC,EAASO,EAAOC,EAAqBC,GAClF,MAAMC,EAnBV,SAA0BZ,EAAYE,EAASO,EAAOtB,GAClD,GAAIa,EAAW,IAAMb,EAAI,CACrB,MAAM0B,EAAOb,EAAW,GAAGb,EAAGsB,IAC9B,QAAsBK,IAAlBZ,EAAQO,MACR,OAAOI,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIhB,EAAQO,MAAMU,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKlB,EAAQO,MAAMW,GAAKP,EAAKO,GAExC,OAAOL,EAEX,OAAOb,EAAQO,MAAQI,EAE3B,OAAOX,EAAQO,MAGMY,CAAiBb,EAAiBN,EAASO,EAAOC,GACvE,GAAIE,EAAc,CACd,MAAMU,EAAelB,EAAiBI,EAAiBP,EAAKC,EAASS,GACrEJ,EAAKgB,EAAED,EAAcV,IAG7B,SAASY,EAAuBC,GAC5B,MAAMC,EAAS,GACf,IAAK,MAAMzC,KAAKwC,EACC,MAATxC,EAAE,KACFyC,EAAOzC,GAAKwC,EAAMxC,IAC1B,OAAOyC,EAEX,SAASC,EAAmBF,EAAOG,GAC/B,MAAMC,EAAO,GACbD,EAAO,IAAIE,IAAIF,GACf,IAAK,MAAM3C,KAAKwC,EACPG,EAAKG,IAAI9C,IAAe,MAATA,EAAE,KAClB4C,EAAK5C,GAAKwC,EAAMxC,IACxB,OAAO4C,EAuEX,SAASG,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOlB,EAAMmB,EAAOC,EAASC,GAElC,OADArB,EAAKsB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMrB,EAAKuB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKxB,EAAMyB,EAAWC,GACd,MAATA,EACA1B,EAAK2B,gBAAgBF,GAChBzB,EAAK4B,aAAaH,KAAeC,GACtC1B,EAAK6B,aAAaJ,EAAWC,GAErC,SAASI,EAAe9B,EAAM+B,GAE1B,MAAMC,EAAc7E,OAAO8E,0BAA0BjC,EAAKkC,WAC1D,IAAK,MAAMC,KAAOJ,EACS,MAAnBA,EAAWI,GACXnC,EAAK2B,gBAAgBQ,GAER,UAARA,EACLnC,EAAKoC,MAAMC,QAAUN,EAAWI,GAEnB,YAARA,EACLnC,EAAK0B,MAAQ1B,EAAKmC,GAAOJ,EAAWI,GAE/BH,EAAYG,IAAQH,EAAYG,GAAKG,IAC1CtC,EAAKmC,GAAOJ,EAAWI,GAGvBX,EAAKxB,EAAMmC,EAAKJ,EAAWI,IAIvC,SAASI,EAAmBvC,EAAM+B,GAC9B,IAAK,MAAMI,KAAOJ,EACdP,EAAKxB,EAAMmC,EAAKJ,EAAWI,IAmCnC,SAASK,EAAShC,GACd,OAAOiC,MAAMC,KAAKlC,EAAQmC,YAE9B,SAASC,EAAcC,EAAOpC,EAAMsB,EAAYe,GAC5C,IAAK,IAAI5D,EAAI,EAAGA,EAAI2D,EAAM5D,OAAQC,GAAK,EAAG,CACtC,MAAMc,EAAO6C,EAAM3D,GACnB,GAAIc,EAAK+C,WAAatC,EAAM,CACxB,IAAIuC,EAAI,EACR,MAAMC,EAAS,GACf,KAAOD,EAAIhD,EAAK+B,WAAW9C,QAAQ,CAC/B,MAAMwC,EAAYzB,EAAK+B,WAAWiB,KAC7BjB,EAAWN,EAAUhB,OACtBwC,EAAOC,KAAKzB,EAAUhB,MAG9B,IAAK,IAAI1D,EAAI,EAAGA,EAAIkG,EAAOhE,OAAQlC,IAC/BiD,EAAK2B,gBAAgBsB,EAAOlG,IAEhC,OAAO8F,EAAMM,OAAOjE,EAAG,GAAG,IAGlC,OAAO4D,EAAMlC,EAAYH,GAAQD,EAAQC,GAE7C,SAAS2C,EAAWP,EAAO9B,GACvB,IAAK,IAAI7B,EAAI,EAAGA,EAAI2D,EAAM5D,OAAQC,GAAK,EAAG,CACtC,MAAMc,EAAO6C,EAAM3D,GACnB,GAAsB,IAAlBc,EAAKqD,SAEL,OADArD,EAAKe,KAAO,GAAKA,EACV8B,EAAMM,OAAOjE,EAAG,GAAG,GAGlC,OAAO4B,EAAKC,GAqBhB,SAASuC,EAAUtD,EAAMmC,EAAKT,EAAO6B,GACjCvD,EAAKoC,MAAMoB,YAAYrB,EAAKT,EAAO6B,EAAY,YAAc,IA8EjE,SAASE,EAAajD,EAASC,EAAMiD,GACjClD,EAAQmD,UAAUD,EAAS,MAAQ,UAAUjD,GA4KjD,IAAImD,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAExB,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAcX,SAASK,IACL,MAAMH,EAAYC,IAClB,MAAO,CAACG,EAAMC,KACV,MAAMC,EAAYN,EAAUO,GAAGD,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMjD,EAtMlB,SAAsB+C,EAAMC,GACxB,MAAMG,EAAI5D,SAAS6D,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,GAAM,GAAO,EAAOC,GAC/BG,EAmMeG,CAAaP,EAAMC,GACjCC,EAAUjG,QAAQZ,QAAQN,IACtBA,EAAGyH,KAAKZ,EAAW3C,OAqBnC,MAAMwD,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBlI,GACzB4H,EAAiB3B,KAAKjG,GAK1B,IAAImI,GAAW,EACf,MAAMC,EAAiB,IAAIzF,IAC3B,SAAS0F,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIlG,EAAI,EAAGA,EAAIyF,EAAiB1F,OAAQC,GAAK,EAAG,CACjD,MAAM4E,EAAYa,EAAiBzF,GACnC2E,EAAsBC,GACtByB,EAAOzB,EAAUO,IAGrB,IADAM,EAAiB1F,OAAS,EACnB2F,EAAkB3F,QACrB2F,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAI1F,EAAI,EAAGA,EAAI2F,EAAiB5F,OAAQC,GAAK,EAAG,CACjD,MAAMuG,EAAWZ,EAAiB3F,GAC7BmG,EAAexF,IAAI4F,KAEpBJ,EAAeK,IAAID,GACnBA,KAGRZ,EAAiB5F,OAAS,QACrB0F,EAAiB1F,QAC1B,KAAO6F,EAAgB7F,QACnB6F,EAAgBU,KAAhBV,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeM,SAEnB,SAASJ,EAAOlB,GACZ,GAAoB,OAAhBA,EAAGuB,SAAmB,CACtBvB,EAAGkB,SACHlI,EAAQgH,EAAGwB,eACX,MAAMtH,EAAQ8F,EAAG9F,MACjB8F,EAAG9F,MAAQ,EAAE,GACb8F,EAAGuB,UAAYvB,EAAGuB,SAASvG,EAAEgF,EAAGtG,IAAKQ,GACrC8F,EAAGyB,aAAavI,QAAQ4H,IAiBhC,MAAMY,EAAW,IAAInG,IACrB,IAAIoG,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMhH,IACf6G,EAASK,OAAOF,GAChBA,EAAMhH,EAAEiH,IAGhB,SAASE,EAAeH,EAAOC,EAAO9F,EAAQoF,GAC1C,GAAIS,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAASlG,IAAIqG,GACb,OACJH,EAASL,IAAIQ,GACbF,EAAOO,EAAErD,KAAK,KACV6C,EAASK,OAAOF,GACZT,IACIpF,GACA6F,EAAMM,EAAE,GACZf,OAGRS,EAAMI,EAAEH,IAmZhB,SAASM,EAAkBC,EAAQC,GAC/B,MAAMpB,EAAS,GACTqB,EAAc,GACdC,EAAgB,CAAE7I,QAAS,GACjC,IAAIkB,EAAIwH,EAAOzH,OACf,KAAOC,KAAK,CACR,MAAMoH,EAAII,EAAOxH,GACX4H,EAAIH,EAAQzH,GAClB,GAAI4H,EAAG,CACH,IAAK,MAAM3E,KAAOmE,EACRnE,KAAO2E,IACTF,EAAYzE,GAAO,GAE3B,IAAK,MAAMA,KAAO2E,EACTD,EAAc1E,KACfoD,EAAOpD,GAAO2E,EAAE3E,GAChB0E,EAAc1E,GAAO,GAG7BuE,EAAOxH,GAAK4H,OAGZ,IAAK,MAAM3E,KAAOmE,EACdO,EAAc1E,GAAO,EAIjC,IAAK,MAAMA,KAAOyE,EACRzE,KAAOoD,IACTA,EAAOpD,QAAOvD,GAEtB,OAAO2G,EAqJX,SAASwB,EAAiBb,GACtBA,GAASA,EAAMK,IAKnB,SAASS,EAAgBlD,EAAW/D,EAAQI,GACxC,MAAMyF,SAAEA,EAAQqB,SAAEA,EAAQC,WAAEA,EAAUpB,aAAEA,GAAiBhC,EAAUO,GACnEuB,GAAYA,EAASuB,EAAEpH,EAAQI,GAE/BgF,EAAoB,KAChB,MAAMiC,EAAiBH,EAASI,IAAIrK,GAAKsK,OAAO9J,GAC5C0J,EACAA,EAAWhE,QAAQkE,GAKnB/J,EAAQ+J,GAEZtD,EAAUO,GAAG4C,SAAW,KAE5BnB,EAAavI,QAAQ4H,GAEzB,SAASoC,EAAkBzD,EAAW0D,GAClC,MAAMnD,EAAKP,EAAUO,GACD,OAAhBA,EAAGuB,WACHvI,EAAQgH,EAAG6C,YACX7C,EAAGuB,UAAYvB,EAAGuB,SAASY,EAAEgB,GAG7BnD,EAAG6C,WAAa7C,EAAGuB,SAAW,KAC9BvB,EAAGtG,IAAM,IAGjB,SAAS0J,EAAW3D,EAAW5E,IACI,IAA3B4E,EAAUO,GAAG9F,MAAM,KACnBoG,EAAiBzB,KAAKY,GA1tBrBoB,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKpC,IA0tBtBxB,EAAUO,GAAG9F,MAAMoJ,KAAK,IAE5B7D,EAAUO,GAAG9F,MAAOW,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS0I,EAAK9D,EAAWzC,EAASwG,EAAUC,EAAiBC,EAAWxI,EAAOhB,EAAQ,EAAE,IACrF,MAAMyJ,EAAmBpE,EACzBC,EAAsBC,GACtB,MAAMmE,EAAc5G,EAAQ9B,OAAS,GAC/B8E,EAAKP,EAAUO,GAAK,CACtBuB,SAAU,KACV7H,IAAK,KAELwB,MAAAA,EACAgG,OAAQ5I,EACRoL,UAAAA,EACAG,MAAOhL,IAEP+J,SAAU,GACVC,WAAY,GACZrB,cAAe,GACfC,aAAc,GACdqC,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiB3D,GAAG8D,QAAU,IAElE/D,UAAWlH,IACXqB,MAAAA,GAEJ,IAAI8J,GAAQ,EAkBZ,GAjBAhE,EAAGtG,IAAM8J,EACHA,EAAS/D,EAAWmE,EAAa,CAAC/I,EAAGoJ,KAAQ3I,KAC3C,MAAM+B,EAAQ/B,EAAKV,OAASU,EAAK,GAAK2I,EAOtC,OANIjE,EAAGtG,KAAOgK,EAAU1D,EAAGtG,IAAImB,GAAImF,EAAGtG,IAAImB,GAAKwC,KACvC2C,EAAG6D,MAAMhJ,IACTmF,EAAG6D,MAAMhJ,GAAGwC,GACZ2G,GACAZ,EAAW3D,EAAW5E,IAEvBoJ,IAET,GACNjE,EAAGkB,SACH8C,GAAQ,EACRhL,EAAQgH,EAAGwB,eAEXxB,EAAGuB,WAAWkC,GAAkBA,EAAgBzD,EAAGtG,KAC/CsD,EAAQtB,OAAQ,CAChB,GAAIsB,EAAQkH,QAAS,CACjB,MAAM1F,EAAQL,EAASnB,EAAQtB,QAE/BsE,EAAGuB,UAAYvB,EAAGuB,SAAS4C,EAAE3F,GAC7BA,EAAMtF,QAAQ8C,QAIdgE,EAAGuB,UAAYvB,EAAGuB,SAASW,IAE3BlF,EAAQoH,OACRxC,EAAcnC,EAAUO,GAAGuB,UAC/BoB,EAAgBlD,EAAWzC,EAAQtB,OAAQsB,EAAQlB,QACnDmF,IAEJzB,EAAsBmE,GAsC1B,MAAMU,EACFC,WACIpB,EAAkBqB,KAAM,GACxBA,KAAKC,SAAWlM,EAEpBgM,IAAIzE,EAAMuB,GACN,MAAMrB,EAAawE,KAAKvE,GAAGD,UAAUF,KAAU0E,KAAKvE,GAAGD,UAAUF,GAAQ,IAEzE,OADAE,EAAUlB,KAAKuC,GACR,KACH,MAAMqD,EAAQ1E,EAAU2E,QAAQtD,IACjB,IAAXqD,GACA1E,EAAUjB,OAAO2F,EAAO,IAGpCH,oIC3+CwE5K,k9DAAAA,8NCO1DA,iJAAAA,oIAJHiL,wkBCkG6C,iBAAXjL,KAAsBA,KAAS,yLAApB,iBAAXA,KAAsBA,KAAS,+IAnGpEkL,EAAW,eACXC,GAAU,WACVC,GAAO,aACPC,GAAS,KAChBpJ,EAAO,GACPqJ,WACEC,EAAWrF,OACbiF,GAAWC,YAAgBnF,MAAM,wDAC/BuF,EAAQC,OAAUxE,QAAQC,GAAWwE,WAAWxE,EAASuE,IAEzDE,EAAoBC,GAA+B,IAAzBA,EAAGhH,WAAW1D,QAA8C,IAA9B0K,EAAGhH,WAAW,GAAGU,SACzEuG,YACLnH,OAAAA,MAAMoH,QAAQZ,SAAkBM,EAAMN,GAH1Ba,EAGuC,EAHlC9K,EAGqCiK,EAAShK,OAHtCF,KAAKgL,MAAMhL,KAAKiL,UAAYhL,EAAM8K,GAAOA,YAGeP,EAAMN,OAH3Ea,EAAK9K,GAaZiL,SAA4BC,YAAAA,EAAapJ,KAAAA,IAAUqJ,cAAAA,IAAoBA,eAAe,MAC3FD,EAAYE,YAAc,GAC1BF,EAAYvG,UAAU+B,IAAI,oBACf2E,KAAUvJ,GACpBoJ,EAAYE,aAAeC,KACNF,GAAiBD,EAAYE,cAAgBtJ,EAAKwJ,KAAK,SAE3D,iBAATnB,QAA0BI,EAAMJ,SAAcI,EAAM,MACxB,KAA5BW,EAAYE,aAClBF,EAAYE,YAAcF,EAAYE,YAAYjM,MAAM,GAAI,SACtDyL,iBAIFA,IAEyB,OAA5BM,EAAYK,aAAyBrB,IACR,GAAhCgB,EAAYvG,UAAU1E,OACnBiL,EAAYvI,gBAAgB,SAC5BuI,EAAYvG,UAAUV,OAAO,YHqkBnC,IAAiBhG,EAAAA,eGtiBXyM,EAAkB1J,aAAiBgE,MAAM,iDA3D1BwG,CAAAA,UACbC,EAAa/J,SAASgK,iBAAiBF,EAAeG,WAAWC,kBACnEV,EAAcO,EAAWI,gBACtBX,UACApJ,EAAOoJ,EAAYE,YAAYU,MAAM,IAC3CpB,EAAkBQ,IAAgBb,EAASnG,KAAMiG,EAA+BrI,GAAtBoJ,YAAAA,EAAapJ,KAAAA,IACvEoJ,EAAcO,EAAWI,aAsD1BE,CAAY/K,GACZkJ,aA9BAG,EAAS9L,UAAW2M,YAAAA,KAAmBA,EAAYE,YAAc,cACtD5J,KAAW6I,QAAgBY,EAAiBzJ,GACvD8I,EAAS,SA4BC0B,GAAgB7B,mBAzBpB8B,EAAmBjL,EAAKkL,WAAWC,QAAQC,cAC3CC,EAAgB3K,SAASC,cAAcsK,OAC7CjL,EAAK2C,WAAWpF,QAAQoM,GAAMA,EAAG1G,UACjCjD,EAAKC,YAAYoL,GACVlC,cACKrI,KAAQuI,EAClBiC,QAAQC,IAAIzK,GACZuK,EAAcjB,YAActJ,EAAKwJ,KAAK,UAChCL,GAAmBC,YAAamB,EAAevK,KAAAA,IAAUqJ,eAAe,IAE/Eb,EAAS,UAeuBkC,wBAXvBxG,QAAQC,IACjBoE,EAAS9L,cAAeiD,EAAStB,WAC1B+K,EAAiBzJ,GACvBtB,EAAI,IAAMmK,EAASpK,QAAUgG,QAG/BqE,EAAS,SAKqCmC,IHqiB5C1H,IAAwBM,GAAG4C,SAAS/D,KAAKjG,GAK7C,SAAmBA,GACf8G,IAAwBM,GAAG6C,WAAWhE,KAAKjG,GGziB9CyO,SAAgBvC,GAAO,qQAuB6EnJ,8JClDxE,MAAZjC,gDJsKN+C,EAAK,wOInKa/C,kLAFAA,6HAsBU,gQADaA,shCA5BvCA,cAyBY,MAAZA,6GA1B2BA,6EADdA,2MACLA,6CAAmBA,MAC3BA,6FAFaA,wCA2BD,MAAZA,qEJwqBTiI,EAAS,CACL2F,EAAG,EACHpF,EAAG,GACHlH,EAAG2G,yBAIFA,EAAO2F,GACRtO,EAAQ2I,EAAOO,GAEnBP,EAASA,EAAO3G,0GIrvBZuM,MAAYC,KAAK,cAEjBC,MADcD,KACGD,EACjBG,EAAMhN,KAAKgL,MAAM+B,EAAK,UAEtBE,EAAW,KACXC,GAAiB,EAGjBC,GACAC,GAAM,iBACNC,GAAM,kBACNC,GAAM,qBAGNC,EAAiBJ,EAAgBF,iCAGjCA,EAAW,UACXM,EAAiBJ,EAAgBF,oBAcjCC,GAAkBA,2ICkCjBlO,YAAoBA,yNAApBA,uBAAoBA,mMApEhBwO,EAAY,gBACZC,EAAQ,qBACRC,EAAU,qBACVC,GAAU,wQAElBC,GACD,0BACmBJ,IAAYG,EAAU,YAAc,oBACxCF,mBACEC,EAEjBG,EAAYC,MAAQD,EAAYC,MAAQ,IACxCvC,KAAK,4LCREvM,4HALe8N,MAECiB,6+BCEV,SAAR/O,QAOa,YAARA,QAOQ,WAARA,QAOQ,UAARA,4FAtBOA,mJAAAA,oGAHNgP,ihECmBLhP,kLAAiBA,6CAAjBA,gRAdLiP,EADAC,GAAa,WAKRvJ,IACRuJ,GAAcA,MACdD,EAAQC,EAAa,YAAc,cACnCC,OAAOxM,SAASyM,KAAKxJ,UAAUD,OAAO,oBALvCA,iBCNW,kEAAQ,CACnB3D,OAAQW,SAASyM"}